/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Flower.js":
/*!***********************!*\
  !*** ./src/Flower.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PhylloFlower)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar PhylloFlower = /*#__PURE__*/function () {\n  function PhylloFlower() {\n    var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var centerX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var centerY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var divergence = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 137.5;\n    var c = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 4;\n    var fps = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 30;\n    _classCallCheck(this, PhylloFlower);\n    this.n = 0; //n should be initialized to 0 in your constructor\n    //The values of the other 4 properties must be passed into the constructor as parameters\n    this.centerX = centerX;\n    this.centerY = centerY;\n    this.divergence = divergence;\n    this.c = c;\n    this.fps = fps;\n    var newX = 0,\n      newY = 0;\n  }\n  return _createClass(PhylloFlower, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      //a draw() method that takes a ctx argument\n      var angle = this.n * this.dtr(this.divergence);\n      var radius = this.c * Math.sqrt(this.n);\n      var x = radius * Math.cos(angle) + this.centerX;\n      var y = radius * Math.sin(angle) + this.centerY;\n      var color = \"hsl(\".concat(this.n / 5 % 361, \",100%,50%)\");\n      this.drawCircle(ctx, x, y, 2, color);\n      this.n++;\n    }\n  }, {\n    key: \"drawCircle\",\n    value: function drawCircle(ctx, x, y, radius, color) {\n      ctx.save();\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"dtr\",\n    value: function dtr(degrees) {\n      return degrees * (Math.PI / 180);\n    }\n  }]);\n}();\n\n\n//# sourceURL=webpack://myat-n-hw3-refactor/./src/Flower.js?");

/***/ }),

/***/ "./src/audio.js":
/*!**********************!*\
  !*** ./src/audio.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyserNode: () => (/* binding */ analyserNode),\n/* harmony export */   audioCtx: () => (/* binding */ audioCtx),\n/* harmony export */   loadSoundFile: () => (/* binding */ loadSoundFile),\n/* harmony export */   pauseCurrentSound: () => (/* binding */ pauseCurrentSound),\n/* harmony export */   playCurrentSound: () => (/* binding */ playCurrentSound),\n/* harmony export */   setVolume: () => (/* binding */ setVolume),\n/* harmony export */   setupWebaudio: () => (/* binding */ setupWebaudio)\n/* harmony export */ });\n// 1 - our WebAudio context, **we will export and make this public at the bottom of the file**\nvar audioCtx;\n\n// **These are \"private\" properties - these will NOT be visible outside of this module (i.e. file)**\n// 2 - WebAudio nodes that are part of our WebAudio audio routing graph\nvar element, sourceNode, analyserNode, gainNode;\nvar highshelf = false;\nvar lowshelf = false;\nvar distortion = false;\nvar distortionAmount = 20;\nvar biquadFilter;\nvar lowShelfBiquadFilter;\nvar distortionFilter;\n\n// 3 - here we are faking an enumeration\nvar DEFAULTS = Object.freeze({\n  gain: .5,\n  numSamples: 256\n});\n\n// 4 - create a new array of 8-bit integers (0-255)\n// this is a typed array to hold the audio frequency data\nvar audioData = new Uint8Array(DEFAULTS.numSamples / 2);\n\n// **Next are \"public\" methods - we are going to export all of these at the bottom of this file**\nvar setupWebaudio = function setupWebaudio(filePath) {\n  // 1 - The || is because WebAudio has not been standardized across browsers yet\n  var AudioContext = window.AudioContext || window.webkitAudioContext;\n  audioCtx = new AudioContext();\n\n  // 2 - this creates an <audio> element\n  element = new Audio(); //document.querySelector(\"audio\");\n\n  // 3 - have it point at a sound file\n  loadSoundFile(filePath);\n\n  // 4 - create an a source node that points at the <audio> element\n  sourceNode = audioCtx.createMediaElementSource(element);\n\n  ////////////////////////////\n  // https://developer.mozilla.org/en-US/docs/Web/API/BiquadFilterNode\n  biquadFilter = audioCtx.createBiquadFilter();\n  biquadFilter.type = \"highshelf\";\n  // biquadFilter.frequency.setValueAtTime(1000, audioCtx.currentTime);\n  // biquadFilter.gain.setValueAtTime(20, audioCtx.currentTime);\n\n  lowShelfBiquadFilter = audioCtx.createBiquadFilter();\n  lowShelfBiquadFilter.type = \"lowshelf\";\n  distortionFilter = audioCtx.createWaveShaper();\n  // 4 - create a *analyser node*\n  // https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode\n  // this gets us real-time frequency and time-domain (i.e. waveform) information\n  ////////////////////////////\n\n  // 5 - create an analyser node\n  analyserNode = audioCtx.createAnalyser(); // note the UK spelling of \"Analyser\"\n\n  /*\r\n  // 6\r\n  We will request DEFAULTS.numSamples number of samples or \"bins\" spaced equally \r\n  across the sound spectrum.\r\n    If DEFAULTS.numSamples (fftSize) is 256, then the first bin is 0 Hz, the second is 172 Hz, \r\n  the third is 344Hz, and so on. Each bin contains a number between 0-255 representing \r\n  the amplitude of that frequency.\r\n  */\n\n  // fft stands for Fast Fourier Transform\n  analyserNode.fftSize = DEFAULTS.numSamples;\n\n  // 7 - create a gain (volume) node\n  gainNode = audioCtx.createGain();\n  gainNode.gain.value = DEFAULTS.gain;\n\n  // 8 - connect the nodes - we now have an audio graph\n  // sourceNode.connect(analyserNode);\n  sourceNode.connect(biquadFilter);\n  biquadFilter.connect(lowShelfBiquadFilter);\n  lowShelfBiquadFilter.connect(distortionFilter);\n  distortionFilter.connect(analyserNode);\n  analyserNode.connect(gainNode);\n  gainNode.connect(audioCtx.destination);\n  setupUI();\n};\nvar loadSoundFile = function loadSoundFile(filePath) {\n  element.src = filePath;\n};\nvar playCurrentSound = function playCurrentSound() {\n  element.play();\n};\nvar pauseCurrentSound = function pauseCurrentSound() {\n  element.pause();\n};\nvar setVolume = function setVolume(value) {\n  value = Number(value); // make sure that it's a Number rather than a String\n  gainNode.gain.value = value;\n};\nvar setupUI = function setupUI() {\n  // I. set the initial state of the high shelf checkbox\n  document.querySelector('#cb-highshelf').checked = highshelf; // `highshelf` is a boolean we will declare in a second\n  document.querySelector('#cb-lowshelf').checked = lowshelf; // `highshelf` is a boolean we will declare in a second\n\n  // II. change the value of `highshelf` every time the high shelf checkbox changes state\n  document.querySelector('#cb-highshelf').onchange = function (e) {\n    highshelf = e.target.checked;\n    toggleHighshelf(); // turn on or turn off the filter, depending on the value of `highshelf`!\n  };\n  document.querySelector('#cb-lowshelf').onchange = function (e) {\n    lowshelf = e.target.checked;\n    toggleLowshelf(); // turn on or turn off the filter, depending on the value of `lowshelf`!\n  };\n  document.querySelector('#cb-distortion').onchange = function (e) {\n    distortion = e.target.checked;\n    toggleDistortion(); // turn on or turn off the filter, depending on the value of `distortion`!\n  };\n  document.querySelector('#slider-distortion').value = distortionAmount;\n  document.querySelector('#slider-distortion').onchange = function (e) {\n    distortionAmount = Number(e.target.value);\n    toggleDistortion();\n  };\n\n  // III. \n  toggleHighshelf(); // when the app starts up, turn on or turn off the filter, depending on the value of `highshelf`!\n  toggleLowshelf();\n};\nvar toggleHighshelf = function toggleHighshelf() {\n  if (highshelf) {\n    biquadFilter.frequency.setValueAtTime(1000, audioCtx.currentTime); // we created the `biquadFilter` (i.e. \"treble\") node last time\n    biquadFilter.gain.setValueAtTime(25, audioCtx.currentTime);\n  } else {\n    biquadFilter.gain.setValueAtTime(0, audioCtx.currentTime);\n  }\n};\nvar toggleLowshelf = function toggleLowshelf() {\n  if (lowshelf) {\n    lowShelfBiquadFilter.frequency.setValueAtTime(1000, audioCtx.currentTime);\n    lowShelfBiquadFilter.gain.setValueAtTime(15, audioCtx.currentTime);\n  } else {\n    lowShelfBiquadFilter.gain.setValueAtTime(0, audioCtx.currentTime);\n  }\n};\nvar toggleDistortion = function toggleDistortion() {\n  if (distortion) {\n    distortionFilter.curve = null; // being paranoid and trying to trigger garbage collection\n    distortionFilter.curve = makeDistortionCurve(distortionAmount);\n  } else {\n    distortionFilter.curve = null;\n  }\n};\n\n// from: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode\nvar makeDistortionCurve = function makeDistortionCurve() {\n  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n  var n_samples = 256,\n    curve = new Float32Array(n_samples);\n  for (var i = 0; i < n_samples; ++i) {\n    var x = i * 2 / n_samples - 1;\n    curve[i] = (Math.PI + amount) * x / (Math.PI + amount * Math.abs(x));\n  }\n  return curve;\n};\n\n\n//# sourceURL=webpack://myat-n-hw3-refactor/./src/audio.js?");

/***/ }),

/***/ "./src/canvas.js":
/*!***********************!*\
  !*** ./src/canvas.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canvasHeight: () => (/* binding */ canvasHeight),\n/* harmony export */   canvasWidth: () => (/* binding */ canvasWidth),\n/* harmony export */   ctx: () => (/* binding */ ctx),\n/* harmony export */   draw: () => (/* binding */ draw),\n/* harmony export */   setupCanvas: () => (/* binding */ setupCanvas)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./main.js */ \"./src/main.js\");\n/* harmony import */ var _Flower_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Flower.js */ \"./src/Flower.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/*\r\n\tThe purpose of this file is to take in the analyser node and a <canvas> element:\r\n\t  - the module will create a drawing context that points at the <canvas>\r\n\t  - it will store the reference to the analyser node\r\n\t  - in draw(), it will loop through the data in the analyser node\r\n\t  - and then draw something representative on the canvas\r\n\t  - maybe a better name for this file/module would be *visualizer.js* ?\r\n*/\n\n\n\nvar ctx, canvasWidth, canvasHeight, gradient, analyserNode, audioData;\nvar angle = 0;\nvar rotateSpeed = 1;\nvar setupCanvas = function setupCanvas(canvasElement, analyserNodeRef) {\n  // create drawing context\n  ctx = canvasElement.getContext(\"2d\", {\n    willReadFrequently: true\n  });\n  canvasWidth = canvasElement.width;\n  canvasHeight = canvasElement.height;\n  // create a gradient that runs top to bottom\n  gradient = _utils_js__WEBPACK_IMPORTED_MODULE_0__.getLinearGradient(ctx, 0, 0, 0, canvasHeight, [{\n    percent: 0,\n    color: \"blue\"\n  }, {\n    percent: .25,\n    color: \"green\"\n  }, {\n    percent: .5,\n    color: \"yellow\"\n  }, {\n    percent: .75,\n    color: \"red\"\n  }, {\n    percent: 1,\n    color: \"magenta\"\n  }]);\n  // keep a reference to the analyser node\n  analyserNode = analyserNodeRef;\n  // this is the array where the analyser data will be stored\n  audioData = new Uint8Array(analyserNode.fftSize / 2);\n};\nvar draw = function draw() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // 1 - populate the audioData array with the frequency data from the analyserNode\n  // notice these arrays are passed \"by reference\"\n  analyserNode.getByteFrequencyData(audioData);\n  // OR\n  //analyserNode.getByteTimeDomainData(audioData); // waveform data\n\n  // 2 - draw background\n  ctx.save();\n  ctx.fillStyle = \"black\";\n  ctx.globalAlpha = .1;\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n  ctx.restore();\n\n  //Draw Flower\n  drawFlower();\n  angle += rotateSpeed;\n  if (angle > 500) angle = 10;\n  // 3 - draw gradient\n  if (params.showGradient) {\n    drawGradient();\n  }\n  ctx.save();\n  //drawLines\n  if (params.showLine) {\n    drawLines();\n  }\n  ctx.restore();\n  // 4 - draw bars\n  if (params.showBars) {\n    drawBars();\n  }\n  // 5 - draw circles\n  if (params.showCircles) {\n    drawCircles();\n  }\n\n  // A) grab all of the pixels on the canvas and put them in the `data` array\n  // `imageData.data` is a `Uint8ClampedArray()` typed array that has 1.28 million elements!\n  // the variable `data` below is a reference to that array\n  var imageData = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\n  var data = imageData.data;\n  var length = data.length;\n  var width = imageData.width; //not using here\n  // B) Iterate through each pixel, stepping 4 elements at a time (which is the RGBA for 1 pixel)\n  for (var i = 0; i < length; i++) {\n    // C) randomly change every 20th pixel to red\n    if (params.showNoise && Math.random() < .05) {\n      // data[i] is the red channel\n      // data[i+1] is the green channel\n      // data[i+2] is the blue channel\n      // data[i+3] is the alpha channel\n      data[i] = data[i + 1] = data[i + 2] = 0; // zero out the red and green and blue channels\n      data[i + 1] = 200;\n    } // end if\n\n    //invert?\n    if (params.showInvert) {\n      var red = data[i],\n        green = data[i + 1],\n        blue = data[i + 2];\n      data[i] = 255 - red;\n      data[i + 1] = 255 - green;\n      data[i + 2] = 255 - blue;\n      //data[i+3] is the alpha, but we're leaving that alone\n    }\n  } // end for\n\n  if (params.showEmboss) {\n    for (var _i = 0; _i < length; _i++) {\n      if (_i % 4 == 3) continue; //skip alpha channel\n      data[_i] = 127 + 2 * data[_i] - data[_i + 4] - data[_i + width * 4];\n    }\n  }\n\n  // D) copy image data back to canvas\n  ctx.putImageData(imageData, 0, 0);\n  ctx.save();\n  ctx.fillStyle = \"black\";\n  ctx.globalAlpha = .1;\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n  ctx.restore();\n}; //end draw()\n\nvar drawGradient = function drawGradient() {\n  ctx.save();\n  ctx.translate(canvasWidth / 2, canvasHeight / 2);\n  // ctx.rotate(angle);\n  ctx.translate(-canvasWidth / 2, -canvasHeight / 2);\n  ctx.fillStyle = gradient;\n  ctx.globalAlpha = .3;\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n  ctx.fillStyle = \"rgba(184,255,255,.98)\";\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n  ctx.restore();\n};\nvar drawLines = function drawLines() {\n  var BAR_WIDTH = 30;\n  var MAX_BAR_HEIGHT = 100;\n  var PADDING = 4;\n  var MIDDLE_Y = canvasHeight / 2;\n  ctx.translate(canvasWidth / 2, canvasHeight / 2);\n  ctx.rotate(angle);\n  ctx.translate(-canvasWidth / 2, -canvasHeight / 2);\n  if (!_main_js__WEBPACK_IMPORTED_MODULE_1__.play) {\n    ctx.fillStyle = \"red\";\n    ctx.save();\n    ctx.translate(440, MIDDLE_Y - 170);\n    var _iterator = _createForOfIteratorHelper(audioData),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var b = _step.value;\n        var percent = b / 255;\n        if (percent < .02) percent = .02;\n        ctx.translate(BAR_WIDTH, 0);\n        ctx.rotate(Math.PI * 2 / 32);\n        ctx.save(); //for flip\n        ctx.scale(1, -1);\n        ctx.fillStyle = \"rgb(\".concat(b, \",\").concat(b - 128, \",\").concat(255 - b, \")\");\n        ctx.fillRect(0, 0, BAR_WIDTH, MAX_BAR_HEIGHT * percent);\n        ctx.restore();\n        ctx.translate(PADDING, 10); //add space between bars\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    ctx.restore();\n  }\n  ctx.save();\n  ctx.strokeStyle = \"white\";\n  ctx.lineWidth = 3;\n  var x = 0;\n  var y = MIDDLE_Y + 200;\n  ctx.beginPath();\n  if (!_main_js__WEBPACK_IMPORTED_MODULE_1__.play) {\n    ctx.moveTo(x, y);\n    var _iterator2 = _createForOfIteratorHelper(audioData),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _b = _step2.value;\n        //moveTo()s\n        ctx.lineTo(x, y - _b);\n        x += ctx.canvas.width / (audioData.length - 10);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n  ctx.restore();\n};\nvar drawBars = function drawBars() {\n  var barSpacing = 4;\n  var margin = 5;\n  var screenWidthForBars = canvasWidth - audioData.length * barSpacing - margin * 2;\n  var barWidth = screenWidthForBars / audioData.length;\n  var barHeight = 200;\n  var topSpacing = 100;\n  ctx.save();\n  ctx.fillStyle = 'rgba(255,255,255,0.50)';\n  ctx.strokeStyle = 'rgba(0,0,0,0.5)';\n  //loop through the data and draw!\n  for (var i = 0; i < audioData.length; i++) {\n    ctx.fillRect(margin + i * (barWidth + barSpacing), topSpacing + 256 - audioData[i], barWidth, barHeight);\n    ctx.strokeRect(margin + i * (barWidth + barSpacing), topSpacing + 256 - audioData[i], barWidth, barHeight);\n  }\n  ctx.restore();\n};\nvar drawCircle = function drawCircle(ctx, radius, startAngle, endAngle, fillStyle) {\n  var strokeStyle = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"red\";\n  var linewidth = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  ctx.save();\n  ctx.fillStyle = fillStyle;\n  ctx.strokeStyle = strokeStyle;\n  ctx.beginPath();\n  ctx.arc(canvasWidth / 2, canvasHeight / 2, radius, startAngle, endAngle * Math.PI, false);\n  ctx.linewidth = linewidth;\n  ctx.fill();\n  ctx.stroke();\n  ctx.closePath();\n  ctx.restore();\n};\nvar drawCircles = function drawCircles() {\n  var maxRadius = canvasHeight / 4;\n  ctx.save();\n  ctx.globalAlpha = 0.5;\n  for (var i = 0; i < audioData.length; i++) {\n    var percent = audioData[i] / 255;\n\n    //middle circle\n    var circleRadius = percent * maxRadius;\n    drawCircle(ctx, circleRadius, 0, 2, _utils_js__WEBPACK_IMPORTED_MODULE_0__.makeColor(255, 111, 111, .34 - percent / 3.0));\n\n    //purple outer circle\n    drawCircle(ctx, circleRadius * 1.5, 0, 2, _utils_js__WEBPACK_IMPORTED_MODULE_0__.makeColor(184, 0, 255, .10 - percent / 10.0));\n\n    //red-ish circles, smaller\n    drawCircle(ctx, circleRadius * 0.5, 0, 2, _utils_js__WEBPACK_IMPORTED_MODULE_0__.makeColor(200, 200, 255, .50 - percent / 5.0));\n\n    //white ring outside\n    drawCircle(ctx, circleRadius * 2, 0, 2, _utils_js__WEBPACK_IMPORTED_MODULE_0__.makeColor(0, 0, 0, 0), \"rgba(255,255,255,1)\", 10);\n  }\n  ctx.restore();\n};\nvar drawFlower = function drawFlower() {\n  var flowerLeft = new _Flower_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](0, canvasWidth / 4, canvasHeight / 2, 137.5, 4, 40);\n  var flowerRight = new _Flower_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](0, canvasWidth / 4 * 3, canvasHeight / 2, 137.1, 3, 60);\n  var spriteArray = [flowerLeft, flowerRight];\n  for (var i = 0; i < spriteArray.length; i++) {\n    loop(spriteArray[i], spriteArray[i].fps);\n  }\n};\n//pass in object and fps that the objects get drawn\nvar loop = function loop(flower, fps) {\n  // setTimeout(loop,1000/fps); //doesnt work cuz of argument\n  setTimeout(function () {\n    return loop(flower, fps);\n  }, 1000 / fps);\n  if (!_main_js__WEBPACK_IMPORTED_MODULE_1__.play) {\n    flower.draw(ctx);\n  }\n};\n\n\n//# sourceURL=webpack://myat-n-hw3-refactor/./src/canvas.js?");

/***/ }),

/***/ "./src/loader.js":
/*!***********************!*\
  !*** ./src/loader.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.js */ \"./src/main.js\");\n\nwindow.onload = function () {\n  console.log(\"window.onload called\");\n  // 1 - do preload here - load fonts, images, additional sounds, etc...\n  var loadJsonXHR = function loadJsonXHR() {\n    var url = \"data/av-data.json\";\n    var xhr = new XMLHttpRequest();\n    xhr.onload = function (e) {\n      console.log(\"In onload - HTTP Status Code = \".concat(e.target.status));\n      var string = e.target.responseText;\n      var json;\n      try {\n        json = JSON.parse(string);\n      } catch (_unused) {\n        document.querySelector(\"#output\").innerHTML = \"Bad JSON!\";\n        return;\n      }\n\n      //assign value to title but if json.title is not found, report it as so\n      var title = json.title = json.title ? json.title : \"No title Found\";\n      var audioFiles = json.audioFiles;\n      var audioNames = json.audioNames;\n      var description = json.description;\n      var features = json.features;\n\n      //Title of App\n      document.querySelector(\"#title\").innerHTML = title;\n      document.querySelector(\"#titleName\").innerHTML = title;\n\n      //File Names\n      var qsFile = document.querySelector(\"#select-track\");\n      for (var i = 0; i < audioFiles.length; i++) {\n        qsFile.options[i].value = audioFiles[i];\n        qsFile.options[i].text = audioNames[i];\n      }\n\n      //Description & Features\n      var qsDescription = document.querySelector(\"#description\");\n      var html = \"\".concat(description, \"\\n\");\n      html += \"<ul>\";\n      for (var _i = 0; _i < features.length; _i++) {\n        html += \"<li>\".concat(features[_i], \"</li>\");\n      }\n      html += \"</ul>\";\n      // console.log(features);\n\n      qsDescription.innerHTML = html;\n    };\n    xhr.onerror = function (e) {\n      return console.log(\"In onerror - HTTP Status Code = \".concat(e.target.status));\n    };\n    xhr.open(\"GET\", url);\n    xhr.send();\n  };\n  loadJsonXHR();\n\n  // 2 - start up app\n  _main_js__WEBPACK_IMPORTED_MODULE_0__.init();\n};\n\n//# sourceURL=webpack://myat-n-hw3-refactor/./src/loader.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   play: () => (/* binding */ play)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _audio_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audio.js */ \"./src/audio.js\");\n/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./canvas.js */ \"./src/canvas.js\");\n/* harmony import */ var _navigation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./navigation.js */ \"./src/navigation.js\");\n/*\r\n\tmain.js is primarily responsible for hooking up the UI to the rest of the application \r\n\tand setting up the main event loop\r\n*/\n\n\n\n\nvar drawParams = {\n  showGradient: true,\n  showBars: true,\n  showCircles: true,\n  showLine: true,\n  showNoise: false,\n  showInvert: false,\n  showEmboss: false\n};\n\n//Visualization\nvar cbCircles = document.querySelector(\"#cb-circles\");\nvar cbBars = document.querySelector(\"#cb-bars\");\nvar cbGradient = document.querySelector(\"#cb-gradient\");\nvar cbNoise = document.querySelector(\"#cb-noise\");\nvar cbInvert = document.querySelector(\"#cb-invert-colors\");\nvar cbEmboss = document.querySelector(\"#cb-emboss\");\nvar cbLine = document.querySelector(\"#cb-line\");\nvar play = \"no\";\n\n// 1 - here we are faking an enumeration\nvar DEFAULTS = Object.freeze({\n  sound1: \"media/New Adventure Theme.mp3\"\n});\nvar init = function init() {\n  _audio_js__WEBPACK_IMPORTED_MODULE_1__.setupWebaudio(DEFAULTS.sound1); //defaults to first audio track\n  var canvasElement = document.querySelector(\"canvas\"); // hookup <canvas> element\n  setupUI(canvasElement);\n\n  //default true\n  cbCircles.checked = true;\n  cbBars.checked = true;\n  cbGradient.checked = true;\n  cbLine.checked = true;\n  var ctx = canvasElement.getContext(\"2d\", {\n    willReadFrequently: true\n  });\n  // //Setup canvas\n  _canvas_js__WEBPACK_IMPORTED_MODULE_2__.setupCanvas(canvasElement, _audio_js__WEBPACK_IMPORTED_MODULE_1__.analyserNode);\n  loop();\n};\nvar setupUI = function setupUI(canvasElement) {\n  _navigation_js__WEBPACK_IMPORTED_MODULE_3__.burgerClicked();\n\n  // A - hookup fullscreen button\n  var fsButton = document.querySelector(\"#btn-fs\");\n  var playButton = document.querySelector(\"#btn-play\");\n  // add .onclick event to button\n  fsButton.onclick = function (e) {\n    console.log(\"goFullscreen() called\");\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__.goFullscreen(canvasElement);\n  };\n\n  //add .onclick evenet to button\n  playButton.onclick = function (e) {\n    console.log(\"audioCtx.state before = \".concat(_audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.state));\n\n    //check if context is in suspended state(autoplay policy)\n    if (_audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.state == \"suspended\") {\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.resume();\n    }\n    console.log(\"audioCtx.state after = \".concat(_audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.state));\n    if (e.target.dataset.playing == \"no\") {\n      //if track is currently paused, play it\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.playCurrentSound();\n      e.target.dataset.playing = \"yes\"; //our CSS will set the text to \"Paused\"\n      //if track is playing, pause it\n      play = false;\n    } else {\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.pauseCurrentSound();\n      e.target.dataset.playing = \"no\"; //our css will set the text to \"Play\"\n      play = true;\n    }\n  };\n\n  //Sliders\n  // C - hookup volume slider & label\n  var volumeSlider = document.querySelector(\"#slider-volume\");\n  var volumeLabel = document.querySelector(\"#label-volume\");\n  //add .oninput event to slider\n  volumeSlider.oninput = function (e) {\n    //set the gain\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.setVolume(e.target.value);\n    //update value of label to match value of sldier\n    volumeLabel.innerHTML = Math.round(e.target.value / 2 * 100);\n  };\n  //set value of label to match initial value of slider\n  volumeSlider.dispatchEvent(new Event(\"input\"));\n\n  //D - hookup track <select>\n  var trackSelect = document.querySelector(\"#select-track\");\n  //add .onchange event to <select>\n  trackSelect.onchange = function (e) {\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.loadSoundFile(e.target.value);\n    //pause the current track if it is playing\n    if (playButton.dataset.playing == \"yes\") {\n      playButton.dispatchEvent(new MouseEvent(\"click\"));\n    }\n  };\n\n  //Checkboxes\n  cbBars.onchange = function (e) {\n    drawParams.showBars = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toggleCheckbox(cbBars);\n  };\n  cbCircles.onchange = function (e) {\n    drawParams.showCircles = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toggleCheckbox(cbCircles);\n  };\n  cbGradient.onchange = function (e) {\n    drawParams.showGradient = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toggleCheckbox(cbGradient);\n  };\n  cbNoise.onchange = function (e) {\n    drawParams.showNoise = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toggleCheckbox(cbNoise);\n  };\n  cbInvert.onchange = function (e) {\n    drawParams.showInvert = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toggleCheckbox(cbInvert);\n  };\n  cbEmboss.onchange = function (e) {\n    drawParams.showEmboss = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toggleCheckbox(cbEmboss);\n  };\n  cbLine.onchange = function (e) {\n    drawParams.showLine = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toggleCheckbox(cbLine);\n  };\n}; // end setupUI\n\nvar loop = function loop() {\n  /* NOTE: This is temporary testing code that we will delete in Part II */\n  setTimeout(loop, 1000 / 60);\n  _canvas_js__WEBPACK_IMPORTED_MODULE_2__.draw(drawParams);\n};\n\n\n//# sourceURL=webpack://myat-n-hw3-refactor/./src/main.js?");

/***/ }),

/***/ "./src/navigation.js":
/*!***************************!*\
  !*** ./src/navigation.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   burgerClicked: () => (/* binding */ burgerClicked)\n/* harmony export */ });\n//Navbar\nvar burgerClicked = function burgerClicked() {\n  var burgerIcon = document.querySelector('#burger');\n  var navbarMenu = document.querySelector('#nav-links');\n  burgerIcon.addEventListener('click', function () {\n    navbarMenu.classList.toggle('is-active');\n  });\n};\n\n\n//# sourceURL=webpack://myat-n-hw3-refactor/./src/navigation.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLinearGradient: () => (/* binding */ getLinearGradient),\n/* harmony export */   getRandomColor: () => (/* binding */ getRandomColor),\n/* harmony export */   goFullscreen: () => (/* binding */ goFullscreen),\n/* harmony export */   makeColor: () => (/* binding */ makeColor),\n/* harmony export */   toggleCheckbox: () => (/* binding */ toggleCheckbox)\n/* harmony export */ });\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar makeColor = function makeColor(red, green, blue) {\n  var alpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  return \"rgba(\".concat(red, \",\").concat(green, \",\").concat(blue, \",\").concat(alpha, \")\");\n};\nvar getRandom = function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n};\nvar getRandomColor = function getRandomColor() {\n  var floor = 35; // so that colors are not too bright or too dark \n  var getByte = function getByte() {\n    return getRandom(floor, 255 - floor);\n  };\n  return \"rgba(\".concat(getByte(), \",\").concat(getByte(), \",\").concat(getByte(), \",1)\");\n};\nvar getLinearGradient = function getLinearGradient(ctx, startX, startY, endX, endY, colorStops) {\n  var lg = ctx.createLinearGradient(startX, startY, endX, endY);\n  var _iterator = _createForOfIteratorHelper(colorStops),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var stop = _step.value;\n      lg.addColorStop(stop.percent, stop.color);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return lg;\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\nvar goFullscreen = function goFullscreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.mozRequestFullscreen) {\n    element.mozRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    // camel-cased 'S' was changed to 's' in spec\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n  // .. and do nothing if the method is not supported\n};\n\n//checkboxes\nvar toggleCheckbox = function toggleCheckbox(cb) {\n  if (!cb.checked) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\n\n//# sourceURL=webpack://myat-n-hw3-refactor/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/loader.js");
/******/ 	
/******/ })()
;